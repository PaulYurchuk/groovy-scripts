//import groovy.json.JsonSlurper
def nexusURL = "http://192.168.50.11:8081"
def repo = "task8"
def cred = "admin:admin123"
def query = """ { "action": "coreui_Component",    "method":"readAssets",    "data":[{"page":"1", "start":"0",    "limit":"300", "sort":[{"property":"name","direction":"ASC"}],    "filter":[{"property":"repositoryName","value":"${repo}"}]}],    "type":"rpc",    "tid":15	} """
def connection = new URL( "${nexusURL}/service/extdirect" )
        .openConnection() as HttpURLConnection
def auth = "${cred}".getBytes().encodeBase64().toString()

connection.setRequestMethod("POST")
//allow write to connection
connection.doOutput = true
// set some headers
connection.setRequestProperty("Authorization" , "Basic ${auth}")
connection.setRequestProperty( "Content-Type", "application/json" )
connection.setRequestProperty( "Accept", "*/*" )
connection.setRequestProperty( "User-Agent", 'groovy-2.4.4' )
// write query to Output in JSON format
def writer = new OutputStreamWriter(connection.outputStream)
writer.write(query)
writer.flush()
writer.close()
connection.connect()
//parser Response from Nexus3

def listArtifacts=[]
def slurper = new groovy.json.JsonSlurper()
def response = connection.inputStream.text
def parsed = slurper.parseText(response)
def artifactID = []
def groupID = []
def Vers = []
parsed.result.data.attributes.maven2.artifactId.each {artifactID.add(it)}
parsed.result.data.attributes.maven2.groupId.each {groupID.add(it)}
parsed.result.data.attributes.maven2.version.each {Vers.add(it)}

parsed.result.data.each {
    if (it.name.matches(~/.+.tar.gz/)) {
        listArtifacts.add(it.name)

    }
}
println connection.responseCode + ": " + listArtifacts.reverse()
println artifactID
println groupID
println Vers

/*
def url = 'http://nexus/repository/task8/helloworld/hello-58/2.0/hello-58-2.0-release.tar.gz'

def file = new File('hello-58-2.0-release.tar.gz').newOutputStream()
file << new URL(url).openStream()
file.close()

/*
def listArtifacts = []
if ( connection.responseCode == 200){
    // get the JSON response

    def json = connection.inputStream.withCloseable { inStream ->
        new JsonSlurper().parse( inStream as InputStream )
    }
def object = json
    // extract some data from the JSON, printing a report
        println item.title
    println "Temperature: ${item.condition?.temp}, Condition: ${item.condition?.text}"

    show some forecasts
    println "Forecasts:"
    item.forecast.each { f ->
        println " * ${f.date} - Low: ${f.low}, High: ${f.high}, Condition: ${f.text}"

    }

} else {
    println connection.responseCode + ": " + connection.inputStream.text
}

println connection.responseCode + ": " + connection.inputStream.text
//def slurper = new groovy.json.JsonSlurper()
//def response = connection.inputStream.toString()

/*def parsed = new groovy.json.JsonSlurper().parse(connection)
parsed.result.data.each {
    if (it.name.matches(~/.+.tar.gz/)) {
        listArtifacts.add(it.name)
    }
}
*/


